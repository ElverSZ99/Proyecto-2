/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Grafico;

import Controladores.ControladorCitas;
import Controladores.ControladorExpedientes;
import Modelo.Archivo;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author johan
 */
public class ExpedienteSencillo extends javax.swing.JInternalFrame implements Runnable{

  private boolean estado;
    private Archivo arch;
    private ControladorCitas cCitas;
    private ControladorExpedientes exp;

    public synchronized void buscar() {
        while (this.estado) {
            try {
                exp.buscarObservaciones(this);
            } catch (Exception e) {
            }
            try {
                this.wait();
            } catch (InterruptedException ex1) {

            }
        }
    }

    public JTextField getTxtFechaAtencion() {
        return txtFechaAtencion;
    }

    public JTable getTablaObser() {
        return TablaObser;
    }

    public void setTxtFechaAtencion(String txtFechaAtencion) {
        this.txtFechaAtencion.setText(txtFechaAtencion);
    }

    public void setTxtFechaPaciente(String txtFechaPaciente) {
        this.txtFechaPaciente.setText(txtFechaPaciente);
    }

    public void setTxtNombrePaciente(String txtNombrePaciente) {
        this.txtNombrePaciente.setText(txtNombrePaciente);
    }

    public JTable getTablaCitasDelDia() {
        return TablaCitasDelDia;
    }

    public JTextField getTxtCedulaMedic() {
        return txtCedulaMedic;
    }

    public JTextField getTxtCedulaPaciente() {
        return txtCedulaPaciente;
    }

    public JTextArea getTxtComentario() {
        return txtComentario;
    }

    public JTextField getTxtEspecialidad() {
        return txtEspecialidad;
    }

//    public JLabel getTxtExpendiente() {
//        return txtExpendiente;
//    }

    public JTextField getTxtFecha() {
        return txtFecha;
    }

    public JTextField getTxtFechaPaciente() {
        return txtFechaPaciente;
    }

    public JTextField getTxtHora() {
        return txtHora;
    }

    public JTextField getTxtMedico() {
        return txtMedico;
    }

    public JTextField getTxtNombrePaciente() {
        return txtNombrePaciente;
    }

    public ExpedienteSencillo() {
        initComponents();
        this.estado = true;
        this.getContentPane().setBackground(new Color(85, 151, 248));
        cCitas = new ControladorCitas();
        exp = new ControladorExpedientes();
        this.RbtnPresente.setVisible(false);
        this.RbtnAusente.setVisible(false);
        Thread h1 = new Thread(this);
        h1.start();
    }

    public void setTxtCedulaMedic(String txtCedulaMedic) {
        this.txtCedulaMedic.setText(txtCedulaMedic);
    }

    public void setTxtEspecialidad(String txtEspecialidad) {
        this.txtEspecialidad.setText(txtEspecialidad);
    }

    public void setTxtMedico(String txtMedico) {
        this.txtMedico.setText(txtMedico);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtEspecialidad = new javax.swing.JTextField();
        txtCedulaPaciente = new javax.swing.JTextField();
        txtCedulaMedic = new javax.swing.JTextField();
        txtNombrePaciente = new javax.swing.JTextField();
        txtFechaPaciente = new javax.swing.JTextField();
        txtHora = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        RbtnPresente = new javax.swing.JRadioButton();
        RbtnAusente = new javax.swing.JRadioButton();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtComentario = new javax.swing.JTextArea();
        txtMedico = new javax.swing.JTextField();
        txtFechaAtencion = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaCitasDelDia = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaObser = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Expediente:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 36))); // NOI18N

        txtEspecialidad.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Especialidad del medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtCedulaPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cedula del paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtCedulaMedic.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cedula del medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtNombrePaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nombre del paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtFechaPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha de cita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtHora.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hora de cita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtFecha.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "fecha de nacimiento ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        RbtnPresente.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RbtnPresente.setText("Presente");
        RbtnPresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RbtnPresenteActionPerformed(evt);
            }
        });

        RbtnAusente.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RbtnAusente.setText("Ausente");
        RbtnAusente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RbtnAusenteActionPerformed(evt);
            }
        });

        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        txtComentario.setColumns(20);
        txtComentario.setRows(5);
        txtComentario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Descrpcion de la cita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 13))); // NOI18N
        jScrollPane1.setViewportView(txtComentario);

        jScrollPane2.setViewportView(jScrollPane1);

        txtMedico.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtFechaAtencion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha de atencion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jScrollPane3.setAutoscrolls(true);
        jScrollPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseClicked(evt);
            }
        });

        TablaCitasDelDia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cita #", "Fecha", "Hora", "Paciente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TablaCitasDelDia);

        TablaObser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Observaciones"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(TablaObser);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCedulaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtCedulaMedic, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(txtFechaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(RbtnPresente)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RbtnAusente)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFechaAtencion, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFechaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCedulaMedic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaAtencion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtCedulaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(RbtnPresente)
                                            .addComponent(RbtnAusente))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane2))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 28, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (exp.verificarExistenciaDeExpediente(this) == true) {
            JOptionPane.showMessageDialog(null, "Se guardo el expediente");
        } else {
            JOptionPane.showMessageDialog(null, "Ya existe una observacion y expediente, se le recomienda que actualice mejor");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void jScrollPane3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseClicked
        enviar();
    }//GEN-LAST:event_jScrollPane3MouseClicked

    private void RbtnPresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RbtnPresenteActionPerformed
               if (RbtnPresente.isSelected()) {
            this.txtComentario.setText("");
        }
    }//GEN-LAST:event_RbtnPresenteActionPerformed

    private void RbtnAusenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RbtnAusenteActionPerformed
          if (RbtnAusente.isSelected()) {
            this.txtComentario.setText("El paciente no se presentó a la cita");
        }
    }//GEN-LAST:event_RbtnAusenteActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        exp.acutalizarExpediente(this);
        exp.exportarXML(this);
    }//GEN-LAST:event_btnActualizarActionPerformed

    public synchronized void enviar() {
        this.txtCedulaPaciente.setText(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 3)));
        exp.buscarpaciente(this);
        String fecha2[] = (String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 1))).split("-");
        this.txtFecha.setText(fecha2[2] + "/" + fecha2[1] + "/" + fecha2[0]);
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 7) {
            this.txtHora.setText(7 + ":00 AM");
            this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 8) {
            this.txtHora.setText(8 + ":00 AM");
            this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 9) {
            this.txtHora.setText(9 + ":00 AM");
           this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 10) {
            this.txtHora.setText(10 + ":00 AM");
            this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 11) {
            this.txtHora.setText(11 + ":00 AM");
            this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 12) {
            this.txtHora.setText(12 + ":00 MD");
            this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 13) {
            this.txtHora.setText(13 + ":00 PM");
            this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 14) {
            this.txtHora.setText(14 + ":00 PM");
            this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 15) {
            this.txtHora.setText(15 + ":00 PM");
            this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        if (Integer.parseInt(String.valueOf(this.TablaCitasDelDia.getValueAt(this.TablaCitasDelDia.getSelectedRow(), 2))) == 16) {
            this.txtHora.setText(16 + ":00 PM");
            this.RbtnPresente.setVisible(true);
            this.RbtnAusente.setVisible(true);
        }
        notify();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RbtnAusente;
    private javax.swing.JRadioButton RbtnPresente;
    private javax.swing.JTable TablaCitasDelDia;
    private javax.swing.JTable TablaObser;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField txtCedulaMedic;
    private javax.swing.JTextField txtCedulaPaciente;
    private javax.swing.JTextArea txtComentario;
    private javax.swing.JTextField txtEspecialidad;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtFechaAtencion;
    private javax.swing.JTextField txtFechaPaciente;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtMedico;
    private javax.swing.JTextField txtNombrePaciente;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
    
        buscar();
    }
}
