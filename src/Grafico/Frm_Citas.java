/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Grafico;

import Controladores.ControladorCitas;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.sql.Date;
import java.text.SimpleDateFormat;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author johan
 */
public class Frm_Citas extends javax.swing.JInternalFrame implements Runnable{
     private ControladorCitas cCitas;
    private int id;
    private boolean estado;

    public synchronized void buscar() {
        while (this.estado) {
            try {
                cCitas.buscarTodasLasCitas(this);
            } catch (Exception e) {
            }
            try {
                this.wait();
            } catch (InterruptedException ex1) {

            }
        }
    }

    public int getId() {
        return id;
    }

    public JComboBox<String> getCbHoras() {
        return cbHora;
    }

    public JTextField getTxtCedula() {
        return txtCedula;
    }

    public JTextField getTxtCedulaPaciente() {
        return txtCedulaPaciente;
    }

    public JTextField getTxtFechaNacimiento() {
        return txtFechaNacimiento;
    }

    public JTextField getTxtNombreMedico() {
        return txtNombreMedico;
    }

    public JTextField getTxtNombrePaciente() {
        return txtNombrePaciente;
    }

    public JDateChooser getJDateFechaCita() {
        return JdateFechaCita;
    }

    public JTable getTablaCitas() {
        return TablaCitas;
    }

    public JDateChooser getJDateBuscarCita() {
        return JdateBuscarFecha;
    }

    public void setTxtFechaNacimiento(Date txtFecha) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fechaComoCadena = sdf.format(txtFecha);
        this.txtFechaNacimiento.setText(fechaComoCadena);
    }

    public void setTxtNombreMedico(String txtNombreMedico) {
        this.txtNombreMedico.setText(txtNombreMedico);
    }

    public void setTxtNombrePaciente(String txtNombrePaciente) {
        this.txtNombrePaciente.setText(txtNombrePaciente);
    }

    public void setTxtEspecialidadMedico(String txtEspecialidad) {
        this.txtEspecialidadMedico.setText(txtEspecialidad);
    }

    public void cargarHora() {
        cbHora.addItem("7");
        cbHora.addItem("8");
        cbHora.addItem("9");
        cbHora.addItem("10");
        cbHora.addItem("11");
        cbHora.addItem("12");
        cbHora.addItem("13");
        cbHora.addItem("14");
        cbHora.addItem("15");
        cbHora.addItem("16");
    }

    public Frm_Citas() {
        initComponents();
        this.estado = true;
        cCitas = new ControladorCitas();
        this.DatosMedico.setVisible(false);
        this.DatosPaciente.setVisible(false);
        this.getContentPane().setBackground(new Color(85, 151, 248));
        cargarHora();
        Thread h1 = new Thread(this);
        h1.start();
    }



    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        JdateFechaCita = new com.toedter.calendar.JDateChooser();
        cbHora = new javax.swing.JComboBox<>();
        txtTiempo = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtCedulaPaciente = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        DatosPaciente = new javax.swing.JPanel();
        txtNombrePaciente = new javax.swing.JTextField();
        txtFechaNacimiento = new javax.swing.JTextField();
        DatosMedico = new javax.swing.JPanel();
        txtNombreMedico = new javax.swing.JTextField();
        txtEspecialidadMedico = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaCitas = new javax.swing.JTable();
        JdateBuscarFecha = new com.toedter.calendar.JDateChooser();
        btnActualizarfecha = new javax.swing.JButton();
        btnBucarPorFecha = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        JdateFechaCita.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha de Cita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        cbHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbHora.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbHoraItemStateChanged(evt);
            }
        });

        txtTiempo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTiempo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTiempo.setText("AM/PM");

        txtCedula.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cedula del medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaKeyReleased(evt);
            }
        });

        txtCedulaPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cedula del Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        txtCedulaPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaPacienteKeyReleased(evt);
            }
        });

        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        DatosPaciente.setBackground(new java.awt.Color(153, 255, 153));
        DatosPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtNombrePaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nombre del Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtFechaNacimiento.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtFechaNacimiento.setBorder(javax.swing.BorderFactory.createTitledBorder("Fecha de Nacimiento"));

        javax.swing.GroupLayout DatosPacienteLayout = new javax.swing.GroupLayout(DatosPaciente);
        DatosPaciente.setLayout(DatosPacienteLayout);
        DatosPacienteLayout.setHorizontalGroup(
            DatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosPacienteLayout.createSequentialGroup()
                .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addContainerGap())
        );
        DatosPacienteLayout.setVerticalGroup(
            DatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosPacienteLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(DatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        DatosMedico.setBackground(new java.awt.Color(153, 255, 153));
        DatosMedico.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtNombreMedico.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nombre del Medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        txtEspecialidadMedico.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtEspecialidadMedico.setBorder(javax.swing.BorderFactory.createTitledBorder("Especialidad del Medico"));

        javax.swing.GroupLayout DatosMedicoLayout = new javax.swing.GroupLayout(DatosMedico);
        DatosMedico.setLayout(DatosMedicoLayout);
        DatosMedicoLayout.setHorizontalGroup(
            DatosMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosMedicoLayout.createSequentialGroup()
                .addComponent(txtNombreMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEspecialidadMedico, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap())
        );
        DatosMedicoLayout.setVerticalGroup(
            DatosMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosMedicoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(DatosMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEspecialidadMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        TablaCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cita #", "Fecha", "Hora", "Cedula del paciente", "Cedula del medico"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaCitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaCitasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaCitas);

        JdateBuscarFecha.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar por fecha", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        btnActualizarfecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarfechaActionPerformed(evt);
            }
        });

        btnBucarPorFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBucarPorFechaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Nota: Selecione la cita que quiere actualizar y llene los datos como si fuera una nueva cita");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(JdateFechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbHora, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCedulaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(JdateBuscarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(btnBucarPorFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnActualizarfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(DatosMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DatosPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(JdateFechaCita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCedulaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbHora)))
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DatosPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DatosMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnActualizarfecha, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(btnBucarPorFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(JdateBuscarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaActionPerformed

    private void txtCedulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyReleased
        if (cCitas.buscarMedico(this) == true) {
            txtCedula.setForeground(Color.GREEN);
            try {
                this.DatosMedico.setVisible(true);
                this.cCitas.agregarDatosMedico(this);
            } catch (Exception e) {
            }

        } else {
            txtCedula.setForeground(Color.RED);
            this.DatosMedico.setVisible(false);
        }
    }//GEN-LAST:event_txtCedulaKeyReleased

    private void txtCedulaPacienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaPacienteKeyReleased
         if (cCitas.buscarPaciente(this) == true) {
            txtCedulaPaciente.setForeground(Color.GREEN);
            try {
                this.DatosPaciente.setVisible(true);
                this.cCitas.agregarDatosPaciente(this);
            } catch (Exception e) {
            }

        } else {
            txtCedulaPaciente.setForeground(Color.RED);
            this.DatosPaciente.setVisible(false);
        }
    }//GEN-LAST:event_txtCedulaPacienteKeyReleased

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
            this.enviar();
    }                                        
    public synchronized void enviar() {
        if (cCitas.limitarCitas(this) == true) {
            notify();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.txtCedula.setText(null);
        this.txtCedulaPaciente.setText(null);
        this.JdateBuscarFecha.setDate(null);
        this.cbHora.setSelectedIndex(0);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnBucarPorFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBucarPorFechaActionPerformed
        cCitas.buscarCitaPorFecha(this);
    }//GEN-LAST:event_btnBucarPorFechaActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
       eliminar();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void TablaCitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaCitasMouseClicked
        this.id = (int) TablaCitas.getValueAt(TablaCitas.getSelectedRow(), 0);
    }//GEN-LAST:event_TablaCitasMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.estado = true;
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void cbHoraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbHoraItemStateChanged
         if (this.cbHora.getSelectedItem() == "7" | this.cbHora.getSelectedItem() == "8" | this.cbHora.getSelectedItem() == "9" | this.cbHora.getSelectedItem() == "10" | this.cbHora.getSelectedItem() == "11") {
            this.txtTiempo.setText("  AM");
        }
        if (this.cbHora.getSelectedItem() == "12") {
            this.txtTiempo.setText("  MD");
        }
        if (this.cbHora.getSelectedItem() == "13" | this.cbHora.getSelectedItem() == "14" | this.cbHora.getSelectedItem() == "15" | this.cbHora.getSelectedItem() == "16") {
            this.txtTiempo.setText("  PM");
        }
    }//GEN-LAST:event_cbHoraItemStateChanged

    private void btnActualizarfechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarfechaActionPerformed
        actualizar();
    }//GEN-LAST:event_btnActualizarfechaActionPerformed

     public synchronized void actualizar() {
        cCitas.actualizarCita(this);
        notify();
    }
    public synchronized void eliminar() {
        cCitas.eliminar(this);
        notify();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DatosMedico;
    private javax.swing.JPanel DatosPaciente;
    private com.toedter.calendar.JDateChooser JdateBuscarFecha;
    private com.toedter.calendar.JDateChooser JdateFechaCita;
    private javax.swing.JTable TablaCitas;
    private javax.swing.JButton btnActualizarfecha;
    private javax.swing.JButton btnBucarPorFecha;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cbHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCedulaPaciente;
    private javax.swing.JTextField txtEspecialidadMedico;
    private javax.swing.JTextField txtFechaNacimiento;
    private javax.swing.JTextField txtNombreMedico;
    private javax.swing.JTextField txtNombrePaciente;
    private javax.swing.JLabel txtTiempo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
       buscar();
    }
}
